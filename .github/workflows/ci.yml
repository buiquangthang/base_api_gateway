name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  linter:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Ruby 3.1.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install library for postgres
        run: sudo apt-get install libpq-dev
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Prepare environment
        run: |
          bundle exec overcommit --sign
          bundle exec overcommit --sign pre-commit
      - name: Run all checks
        run: SKIP=AuthorName,AuthorEmail bundle exec overcommit --run
  test:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: base_api_gateway
          POSTGRES_DB: base_api_gateway_test_1
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Ruby 3.1.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install library for postgres
        run: sudo apt-get install libpq-dev
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Setup env file
        run: cp config/application.yml.sample config/application.yml
      - name: Setup test database
        env:
          RAILS_ENV: test
          DATABASE_NAME: base_api_gateway
          DATABASE_HOST: localhost
          DATABASE_USER: base_api_gateway
          DATABASE_PASSWORD: postgres
          TEST_ENV_NUMBER: 1
        run: |
          bin/rails db:create
          bin/rails db:migrate
      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_NAME: base_api_gateway
          DATABASE_HOST: localhost
          DATABASE_USER: base_api_gateway
          DATABASE_PASSWORD: postgres
          TEST_ENV_NUMBER: 1
        run: bundle exec rspec # TODO: Update the test runner command as per your requirement.
